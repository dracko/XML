<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:ns0="http://www.example.org" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" exclude-result-prefixes=" oracle-xsl-mapper xsi xsd xsl ns0 socket dvm mhdr oraxsl oraext xp20 xref">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../xsd/ClienteSchema.xsd"/>
            <oracle-xsl-mapper:rootElement name="infoCliente" namespace="http://www.example.org"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../xsd/SucursalSchema.xsd"/>
            <oracle-xsl-mapper:rootElement name="sucursal" namespace="http://www.example.org"/>
            <oracle-xsl-mapper:param name="infoSucursal"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../xsd/ArticulosSchema.xsd"/>
            <oracle-xsl-mapper:rootElement name="articulos" namespace="http://www.example.org"/>
            <oracle-xsl-mapper:param name="infoArticulo"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../xsd/ReporteSchema.xsd"/>
            <oracle-xsl-mapper:rootElement name="reporte" namespace="http://www.example.org"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [FRI JAN 06 14:09:10 CST 2023].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="infoSucursal"/>
   <xsl:param name="infoArticulo"/>
   <xsl:template match="/">
      <ns0:reporte>
         <ns0:cliente>
            <ns0:nombre>
               <xsl:value-of select="concat (/ns0:infoCliente/ns0:nombre, &quot; &quot;, /ns0:infoCliente/ns0:apePaterno, &quot; &quot;, /ns0:infoCliente/ns0:apeMaterno )"/>
            </ns0:nombre>
         </ns0:cliente>
         <ns0:sucursal>
            <ns0:id>
               <xsl:value-of select="$infoSucursal/ns0:sucursal/ns0:id"/>
            </ns0:id>
            <ns0:detalle>
               <xsl:value-of select="concat ($infoSucursal/ns0:sucursal/ns0:direccion/ns0:calle, &quot;, &quot;, $infoSucursal/ns0:sucursal/ns0:direccion/ns0:numero, &quot;, &quot;, $infoSucursal/ns0:sucursal/ns0:direccion/ns0:colonia, &quot;, &quot;, $infoSucursal/ns0:sucursal/ns0:direccion/ns0:ciudad, &quot;, &quot;, $infoSucursal/ns0:sucursal/ns0:direccion/ns0:estado, &quot;, &quot;, $infoSucursal/ns0:sucursal/ns0:direccion/ns0:cp )"/>
            </ns0:detalle>
         </ns0:sucursal>
         <ns0:detalleProductos>
            <xsl:for-each select="$infoArticulo/ns0:articulos/ns0:arcticulo [ns0:precio = max($infoArticulo/ns0:articulos/ns0:arcticulo/ns0:precio)]">
               <ns0:elMasCaro>
               <ns0:id>
                <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:id"/>
               </ns0:id>
               <ns0:precio>
                <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:precio"/>
               </ns0:precio>
               </ns0:elMasCaro>
            </xsl:for-each>
            
            <xsl:for-each select="$infoArticulo/ns0:articulos/ns0:arcticulo [ns0:precio = min($infoArticulo/ns0:articulos/ns0:arcticulo/ns0:precio)]">
               <ns0:elMasBarato>
                <ns0:id>
                <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:id"/>
               </ns0:id>
               <ns0:precio>
                <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:precio"/>
               </ns0:precio>
               </ns0:elMasBarato>
            </xsl:for-each>
                        
               <ns0:productos>
               <xsl:for-each select="$infoArticulo/ns0:articulos/ns0:arcticulo">
                  <ns0:producto>
                     <xsl:if test="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:id == null">
                        <ns0:id>
                           <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:id"/>
                        </ns0:id>
                     </xsl:if>
                     <precio>
                       <xsl:value-of select="$infoArticulo/ns0:articulos/ns0:arcticulo/ns0:precio"/>
                     </precio>
                    
                  </ns0:producto>
               </xsl:for-each>
               </ns0:productos>
                      
         </ns0:detalleProductos>
      </ns0:reporte>
   </xsl:template>
</xsl:stylesheet>
